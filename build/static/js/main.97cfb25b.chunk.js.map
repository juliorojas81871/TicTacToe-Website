{"version":3,"sources":["components/game.js","components/friends.js","components/dashboard.js","components/common/loading.js","components/leaderboard.js","components/matches.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["hault","Square","props","id","pos","className","onClick","click_handler","val","MsgBox","display","Game","ID","useState","uid","mark","Array","fill","mat","setmat","started","setstarted","last_move_by","setlast_move_by","resetAll","a","setInterval","window","localStorage","useEffect","socket","on","data","mode","handle_click","e","target","ar","emit","won","squares","lines","i","length","b","c","calculateWinner","console","log","Friend","name","Friends","users","setusers","map","user","Dashboard","uname","giveStatus","status","scoreX","setscoreX","scoreO","setscoreO","winner","setwinner","state","Loading","leader_data","Lrow","leader","username","score","Leaderboard","leaders","setleaders","show","setshow","sort","placeholder","onChange","opt","document","getElementById","value","temp","forEach","includes","push","ldr","playerx","playero","Matches","matches","setmatches","time","match","io","TakeUserName","type","handler","valid","MainApp","setname","ready","setready","setid","isvalid","setisvalid","setItem","reason","trim","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.97cfb25b.chunk.js","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./common/style.css\";\n\n// Assigns the user as Player or Spectator\nconst Marking = (ID) => {\n  if (ID === 1) return \"X\";\n  else if (ID === 2) return \"O\";\n  else return null;\n};\n\nvar hault = false,\n  restarted = false;\n\nfunction Game(props) {\n  const [mark, setmark] = useState(Marking(props.uid)); // Mark that the user can mark on game board on click\n  const [mat, setmat] = useState(Array(9).fill(null)); // initial game state\n  const [started, setstarted] = useState(false); // check for start of the game i.e if users count is more than 2\n  const [last_move_by, setlast_move_by] = useState(\"O\"); // Determines whose turn currently it is\n\n  const resetAll = async () => {\n    await setmat(Array(9).fill(null)); // [null, null, ...]\n    setlast_move_by(\"O\");\n    restarted = true;\n    hault = false;\n  };\n\n  setInterval(() => {\n    // to check if to start the game or not\n    if (window.localStorage[\"users_count\"] >= 2 && !started) {\n      setstarted(true);\n    }\n  }, 1000);\n\n  useEffect(() => {\n    props.socket.on(\"game-play\", (data) => {\n      // executed when other player clicks\n      setmat(data); // update the game state (Matrix) i.e the array of size 9\n      let m = mark === \"X\" ? \"O\" : \"X\";\n      setlast_move_by(m); // update whose turn is currently\n    });\n    props.socket.on(\"gamemode\", (mode) => {\n      // Haults the game when the game is over and wait till restart is clicked\n      if (mode === \"H\") {\n        hault = true;\n      } else {\n        resetAll();\n      }\n    });\n  }, []);\n\n  const handle_click = (e) => {\n    // executed Local Player first\n    if (\n      mark === null ||\n      started === false ||\n      last_move_by === mark ||\n      hault === true\n    )\n      return;\n    let pos = e.target.id; // get the position clicked\n    if (mat[pos] === null) {\n      let ar = mat;\n      ar[pos] = mark;\n      setmat(ar); // update game state (matrix) game-board\n      props.socket.emit(\"my-move\", ar); // update the player move to all clients\n      setlast_move_by(mark);\n      let won = calculateWinner(ar); // check if this move leads to a win\n      if (won) {\n        props.socket.emit(\"winner\", won); // if this player wins update score\n        props.socket.emit(\"game-state\", \"GO\"); // update game mode : GO = Game Over\n        hault = true;\n      }\n    } else console.log(\"ALready selected\");\n  };\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    for (let i = 0; i < 9; i++) {\n      if (squares[i] === null) return null;\n    }\n    return \"D\";\n  }\n\n  return (\n    <div>\n      <div className=\"board\">\n        <Square pos={0} val={mat[0]} click_handler={handle_click} />\n        <Square pos={1} val={mat[1]} click_handler={handle_click} />\n        <Square pos={2} val={mat[2]} click_handler={handle_click} />\n        <Square pos={3} val={mat[3]} click_handler={handle_click} />\n        <Square pos={4} val={mat[4]} click_handler={handle_click} />\n        <Square pos={5} val={mat[5]} click_handler={handle_click} />\n        <Square pos={6} val={mat[6]} click_handler={handle_click} />\n        <Square pos={7} val={mat[7]} click_handler={handle_click} />\n        <Square pos={8} val={mat[8]} click_handler={handle_click} />\n      </div>\n      {last_move_by === \"O\" ? (\n        <MsgBox display={\"Player X Turn\"} />\n      ) : (\n        <MsgBox display={\"Player O Turn\"} />\n      )}\n    </div>\n  );\n}\n\nfunction Square(props) {\n  return (\n    <div>\n      <button id={props.pos} className=\"cell\" onClick={props.click_handler}>\n        {props.val}\n      </button>\n    </div>\n  );\n}\n\nfunction MsgBox(props) {\n  return <div className=\"game-msg-box\">{props.display}</div>;\n}\n\nexport default Game;\n","import React, { useState, useEffect } from \"react\";\nimport \"./common/style.css\";\n\nfunction Friends(props) {\n  const [users, setusers] = useState([]);\n\n  useEffect(() => {\n    props.socket.emit(\"users-list\", \"update-users\");\n    props.socket.on(\"users\", (data) => {\n      // get the list of users connected to server\n      window.localStorage[\"users_count\"] = data.length;\n      setusers(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"users-box\">\n      <div className=\"title\">FRIENDS WATCHING</div>\n      <div className=\"user-list\">\n        {users.map((user) => {\n          return <Friend name={user} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction Friend(props) {\n  return <div className=\"friend-row\">{props.name}</div>;\n}\n\nexport default Friends;\n","import React, { useState, useEffect } from \"react\";\nimport \"./common/style.css\";\n\nfunction giveStatus(id) {\n  if (id === 1) return \"Player X\";\n  else if (id === 2) return \"Player O\";\n  else return \"Spectator\";\n}\n\nfunction Dashboard(props) {\n  const [id, setid] = useState(props.uid);\n  const [uname, setuname] = useState(props.name);\n  const [status, setstatus] = useState(giveStatus(id));\n  const [scoreX, setscoreX] = useState(0);\n  const [scoreO, setscoreO] = useState(0);\n  const [winner, setwinner] = useState(null);\n\n  useEffect(() => {\n    props.socket.on(\"score\", (data) => {\n      // update the score id someone wins\n      if (data === \"X\") {\n        setscoreX((state) => {\n          return state + 1;\n        });\n        setwinner(\"PLAYER \" + data + \" WON!!!\");\n      } else if (data === \"O\") {\n        setscoreO((state) => {\n          return state + 1;\n        });\n        setwinner(\"PLAYER \" + data + \" WON!!!\");\n      } else {\n        setwinner(\"MATCH WAS A DRAW\");\n      }\n    });\n    props.socket.on(\"gamemode\", (mode) => {\n      if (mode === \"C\") setwinner(null);\n    });\n  }, []);\n\n  const restart = (e) => {\n    // Restart the game if cicked\n    console.log(\"restart\");\n    setwinner(null);\n    props.socket.emit(\"game-state\", \"RG\"); // RG = Restart Game\n  };\n\n  return (\n    <div className=\"dashboard-box\">\n      <div className=\"inner-row\">\n        <div className=\"user-info\">{uname}</div>\n        <div className=\"status-msg-box\">{status}</div>\n      </div>\n      <div className=\"score-box\">\n        <b>SCOREBOARD</b>\n        <div className=\"player\">\n          {\"Player X : \"} {scoreX}\n        </div>\n        <div className=\"player\">\n          {\"Player O : \"} {scoreO}\n        </div>\n      </div>\n      {winner && (\n        <div className=\"winner-box\">\n          {winner}\n          <button onClick={restart}>RESTART</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Loading() {\n  return (\n    <div className=\"body\">\n      <div className=\"loading\">\n        <div className=\"dot1\"></div>\n        <div className=\"dot2\"></div>\n        <div className=\"dot3\"></div>\n        <div className=\"dot4\"></div>\n      </div>\n      <div className=\"loading-quote\">Loading</div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport \"./common/style.css\";\n\nvar leader_data = [];\n\nfunction Leaderboard(props) {\n  const [leaders, setleaders] = useState(null);\n  const [show, setshow] = useState(false);\n\n  useEffect(() => {\n    // to update the leaderboard if any change in database is made\n    props.socket.emit(\"update-leader-board\", \"update-leaderboad\");\n    props.socket.on(\"leader-board\", (data) => {\n      // console.log(\"data : \", data);\n      data.sort((a, b) => {\n        return b.score - a.score;\n      }); // sort them\n      setleaders(data);\n      leader_data = data;\n    });\n  }, []);\n\n  // to toggle between the hide and show feature of this component\n  const toggle = (e) => {\n    setshow((state) => {\n      return !state;\n    });\n  };\n  const filter = () => {\n    let opt = document.getElementById(\"filter-option\").value;\n    // console.log(\"Typed : \", opt);\n    let temp = [];\n    leader_data.forEach((leader) => {\n      if (leader.username.includes(opt)) temp.push(leader);\n    });\n    setleaders(temp);\n  };\n\n  return (\n    <div>\n      <div className=\"upper-head\">\n        <button className=\"LB-btn\" onClick={toggle}>\n          {\" \"}\n          {show ? \"Hide Leaderboard\" : \"Show Leaderboard\"}{\" \"}\n        </button>\n        {show && (\n          <input id=\"filter-option\" placeholder=\"filter by\" onChange={filter} />\n        )}\n      </div>\n      {/* <button className=\"LB-btn\" onClick={toggle}> {show?\"Hide Leaderboard\":\"Show Leaderboard\" }  </button> */}\n      {show && (\n        <div className=\"ctable\">\n          <div className=\"table-title\">\n            <div className=\"ttitle-row\"> PLAYER </div>\n            <div className=\"ttitle-row\"> SCORE </div>\n          </div>\n          {leaders !== null &&\n            leaders.map((ldr) => {\n              return <Lrow leader={ldr} username={props.name} />;\n            })}\n          {leaders == null && <div> Loading... </div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Lrow(props) {\n  return (\n    <div className=\"Lrow\">\n      {props.leader.username !== props.username ? (\n        <>\n          <div className=\"r-user\"> {props.leader.username} </div>\n          <div className=\"r-user\"> {props.leader.score} </div>\n        </>\n      ) : (\n        <>\n          <div className=\"r-user-highlighted\"> {props.leader.username} </div>\n          <div className=\"r-user-highlighted\"> {props.leader.score} </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Leaderboard;\n","import React, { useEffect, useState } from \"react\";\nimport \"./common/style.css\";\n\nfunction Matches(props) {\n  const [matches, setmatches] = useState(null);\n  const [show, setshow] = useState(false);\n\n  useEffect(() => {\n    // to update the Previous matches if any change in database is made\n    props.socket.emit(\"update-match-board\", \"update-leaderboad\");\n    props.socket.on(\"match-board\", (data) => {\n      data.sort((a, b) => {\n        return b.time - a.time;\n      }); // sort them\n      setmatches(data);\n    });\n  }, []);\n\n  // to toggle between the hide and show feature of this component\n  const toggle = (e) => {\n    setshow((state) => {\n      return !state;\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"upper-head\">\n        <button className=\"LB-btn\" onClick={toggle}>\n          {\" \"}\n          {show ? \"Hide Previous Matches\" : \"Show Previous Matches\"}{\" \"}\n        </button>\n      </div>\n      {show && (\n        <div className=\"ctable\">\n          <div className=\"table-title\">\n            <div className=\"ttitle-row\"> PLAYER X </div>\n            <div className=\"ttitle-row\"> PLAYER O </div>\n          </div>\n          {matches !== null &&\n            matches.map((match) => {\n              return <Lrow playerx={match.playerx} playero={match.playero} />;\n            })}\n          {matches == null && <div> Loading... </div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Lrow(props) {\n  return (\n    <div className=\"Lrow\">\n      <>\n        <div className=\"r-user\"> {props.playerx} </div>\n        <div className=\"r-user\"> {props.playero} </div>\n      </>\n    </div>\n  );\n}\n\nexport default Matches;\n","import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./common/style.css\";\nimport Game from \"./game\";\nimport Friends from \"./friends\";\nimport Dashboard from \"./dashboard\";\nimport Loading from \"./common/loading\";\nimport Leaderboard from \"./leaderboard\";\nimport Matches from \"./matches\";\n\n// establish socket connection\n// const socket = io(\"http://localhost:8081\"); // web-socket - development\nconst socket = io(); // web-socket\n\nfunction MainApp() {\n  // states\n  const [name, setname] = useState(null);\n  const [ready, setready] = useState(false);\n  const [id, setid] = useState(null);\n  const [isvalid, setisvalid] = useState(true);\n  const [users_count, setusers_count] = useState(0);\n\n  // extra variables\n  var uname;\n  window.localStorage.setItem(\"users_count\", \"0\"); // stores locally the number of users connected to server\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected\");\n    });\n    socket.on(\"disconnect\", (reason) => {\n      console.log(\"Disconnected\");\n    });\n    socket.on(\"reconnect_attempt\", () => {\n      console.log(\"Reconnecting...\");\n    });\n    socket.on(\"user-status\", (data) => {\n      if (data === -1) {\n        // to prevent having same username in a game\n        setisvalid(false);\n        // console.log(\"Same name user\");\n      } else {\n        setid(data);\n        setisvalid(true);\n      }\n      // Returns the id of the user which is basically\n      // says if user is player X or player Y or Spectator\n    });\n    setready(true); // Loads the main UI\n  }, []);\n\n  const connect2server = (e) => {\n    uname = document.getElementById(\"username\").value;\n    if (uname.trim() !== \"\") {\n      setname(uname); // Take the username entered by the user\n      socket.emit(\"join\", uname); // add new users to server variable\n    } else {\n      alert(\"Invalid Username!!\"); // if user entered null string or only spaces as input\n    }\n  };\n\n  return (\n    <div>\n      {!ready && <Loading />}\n      {ready && (\n        <div className=\"body\">\n          <div className=\"header\">tic tac toe</div>\n          {(name === null || isvalid === false) && (\n            <TakeUserName handler={connect2server} valid={isvalid} />\n          )}\n          {id !== null && (\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <Dashboard name={name} uid={id} socket={socket} />\n                <div className=\"border-line\"></div>\n                <Matches socket={socket} />\n              </div>\n              <div className=\"col-4\">\n                <Game uid={id} socket={socket} />\n              </div>\n              <div className=\"col-4\">\n                <Friends socket={socket} />\n                <div className=\"border-line\"></div>\n                <Leaderboard name={name} socket={socket} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction TakeUserName(props) {\n  return (\n    <div className=\"input-box\">\n      <input id=\"username\" placeholder=\"username\" />\n      <button type=\"submit\" onClick={props.handler}>\n        submit\n      </button>\n      {props.valid === false && (\n        <div className=\"game-msg-box\">\n          {\" \"}\n          User with this username has already joined in!!{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MainApp;\n","import \"./App.css\";\nimport React from \"react\";\nimport MainApp from \"./components/main\";\n\nfunction App() {\n  return (\n    <div>\n      <MainApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}